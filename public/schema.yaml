openapi: 3.0.0
info:
  title: Астрон личный кабинет API
  description: API для работы личного кабинета Астрон
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Локальный сервер
  - url: https://astronbuildings.com
    description: Боевой сервер
paths:
  /api/sign-in:
    post:
      summary: Аутентификация
      operationId: signIn
      tags:
        - Пользователь
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                  example: dev@mail.ru
                password:
                  type: string
                  example: password
                remember:
                  type: boolean
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                  - user
                properties:
                  accessToken:
                    type: string
                  user:
                    $ref: "#/components/schemas/Session"
        "400":
          description: Ошибка ввода данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Пользователь забанен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/session:
    get:
      summary: Получение сессии
      operationId: getSession
      tags:
        - Пользователь
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "401":
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/session/refresh:
    get:
      summary: Обновление токенов
      operationId: refreshToken
      tags:
        - Пользователь
      parameters:
        - name: refreshToken
          in: cookie
          description: Refresh Token с клиента
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                properties:
                  accessToken:
                    type: string
        "401":
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/user/restore-password:
    post:
      summary: Восстановление пароля
      operationId: restoreUserPassword
      tags:
        - Пользователь
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - oldPassword
                - newPassword
              properties:
                email:
                  type: string
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Пароль успешно изменен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/news:
    get:
      summary: Получить список новостей
      operationId: getNews
      tags:
        - Новости
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
      security:
        - bearerAuth: []
components:
  schemas:
    User:
      type: object
      required:
        - id
        - surname
        - name
        - email
        - password
        - tokenVersion
        - isBanned
      properties:
        id:
          type: string
          example: "1"
        surname:
          type: string
          example: Королев
        name:
          type: string
          example: Данил
        patronymic:
          type: string
          example: Николаевич
        email:
          type: string
          example: dev@mail.ru
        password:
          type: string
          example: 123
        tokenVersion:
          type: integer
        isBanned:
          type: boolean
    Session:
      type: object
      required:
        - email
        - surname
        - name
      properties:
        email:
          type: string
          example: dev@mail.ru
        surname:
          type: string
          example: Королев
        name:
          type: string
          example: Данил
        patronymic:
          type: string
          example: Николаевич
    News:
      type: object
      required:
        - id
        - title
        - description
        - createdAt
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: Ключевая ставка достигла 30%
        description:
          type: string
          example: Деняк нет, но вы держитесь
        createdAt:
          type: string
          example: "2024-12-30"
          format: date
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Success:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
